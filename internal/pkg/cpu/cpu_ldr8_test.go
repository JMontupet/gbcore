package cpu

var testDataLDR8 = []testData{
	{
		name:         "LD A,d8",
		inMemory:     []uint8{0x3E, 0x42},
		expectedRegs: testRegsValue{a: 0x42, pc: 0x0002},
		cycles:       2,
	},
	{
		name:         "LD B,d8",
		inMemory:     []uint8{0x06, 0x42},
		expectedRegs: testRegsValue{b: 0x42, pc: 0x0002},
		cycles:       2,
	},
	{
		name:         "LD C,d8",
		inMemory:     []uint8{0x0E, 0x42},
		expectedRegs: testRegsValue{c: 0x42, pc: 0x0002},
		cycles:       2,
	},
	{
		name:         "LD D,d8",
		inMemory:     []uint8{0x16, 0x42},
		expectedRegs: testRegsValue{d: 0x42, pc: 0x0002},
		cycles:       2,
	},
	{
		name:         "LD E,d8",
		inMemory:     []uint8{0x1E, 0x42},
		expectedRegs: testRegsValue{e: 0x42, pc: 0x0002},
		cycles:       2,
	},
	{
		name:         "LD H,d8",
		inMemory:     []uint8{0x26, 0x42},
		expectedRegs: testRegsValue{h: 0x42, pc: 0x0002},
		cycles:       2,
	},
	{
		name:         "LD L,d8",
		inMemory:     []uint8{0x2E, 0x42},
		expectedRegs: testRegsValue{l: 0x42, pc: 0x0002},
		cycles:       2,
	},
	{
		name:           "LD (HL),d8",
		inMemory:       []uint8{0x36, 0x42, 0x00},
		inRegs:         testRegsValue{h: 0x00, l: 0x02},
		expectedRegs:   testRegsValue{h: 0x00, l: 0x02, pc: 0x0002},
		expectedMemory: []uint8{0x36, 0x42, 0x42},
		cycles:         3,
	},
	{
		name:         "LD B,B",
		inMemory:     []uint8{0x40},
		inRegs:       testRegsValue{b: 0x42},
		expectedRegs: testRegsValue{b: 0x42, pc: 0x0001},
		cycles:       1,
	},
	{
		name:         "LD B,C",
		inMemory:     []uint8{0x41},
		inRegs:       testRegsValue{c: 0x42},
		expectedRegs: testRegsValue{c: 0x42, b: 0x42, pc: 0x0001},
		cycles:       1,
	},
	{
		name:         "LD B,D",
		inMemory:     []uint8{0x42},
		inRegs:       testRegsValue{d: 0x42},
		expectedRegs: testRegsValue{d: 0x42, b: 0x42, pc: 0x0001},
		cycles:       1,
	},
	{
		name:         "LD B,E",
		inMemory:     []uint8{0x43},
		inRegs:       testRegsValue{e: 0x42},
		expectedRegs: testRegsValue{e: 0x42, b: 0x42, pc: 0x0001},
		cycles:       1,
	},
	{
		name:         "LD B,H",
		inMemory:     []uint8{0x44},
		inRegs:       testRegsValue{h: 0x42},
		expectedRegs: testRegsValue{h: 0x42, b: 0x42, pc: 0x0001},
		cycles:       1,
	},
	{
		name:         "LD B,L",
		inMemory:     []uint8{0x45},
		inRegs:       testRegsValue{l: 0x42},
		expectedRegs: testRegsValue{l: 0x42, b: 0x42, pc: 0x0001},
		cycles:       1,
	},
	{
		name:         "LD B,(HL)",
		inMemory:     []uint8{0x46, 0x42},
		inRegs:       testRegsValue{h: 0x00, l: 0x01},
		expectedRegs: testRegsValue{h: 0x00, l: 0x01, b: 0x42, pc: 0x0001},
		cycles:       2,
	},
	{
		name:         "LD B,A",
		inMemory:     []uint8{0x47},
		inRegs:       testRegsValue{a: 0x42},
		expectedRegs: testRegsValue{a: 0x42, b: 0x42, pc: 0x0001},
		cycles:       1,
	},
}
